// This file was generated from a template. Edit it to match your keyboard.
// See https://zmk.dev/docs/development/hardware-integration/new-shield for more instructions.

#include <locale/keys_de.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    tapping-term-ms = <250>;
    quick-tap-ms = <200>;
    require-prior-idle-ms = <125>;
};

/ {
    // Define a default keymap here.
    // See https://zmk.dev/docs/development/hardware-integration/new-shield#default-keymap.

    combos {
        compatible = "zmk,combos";

        ent+tab-mouse {
            bindings = <&to 6>;
            key-positions = <32 31>;
            layers = <0 1>;
        };

        to-sys {
            bindings = <&to 7>;
            key-positions = <20 31>;
        };

        ausrufe {
            bindings = <&kp EXCLAMATION>;
            key-positions = <0 1>;
            layers = <0 1>;
        };

        quotemarks {
            bindings = <&kp DQT>;
            key-positions = <1 2>;
        };

        slash {
            bindings = <&kp FSLH>;
            key-positions = <2 3>;
        };

        question {
            bindings = <&kp QMARK>;
            key-positions = <6 7>;
        };

        qt {
            bindings = <&kp SQT>;
            key-positions = <7 8>;
        };

        bracket {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <16 17>;
        };

        closebracket {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <17 18>;
        };

        toColemak {
            bindings = <&to 1>;
            key-positions = <31 23 22>;
        };

        toQwertz {
            bindings = <&to 0>;
            key-positions = <31 9>;
        };

        Studio {
            bindings = <&studio_unlock>;
            key-positions = <1 3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        QWERTZ {
            bindings = <
                &kp Q       &kp W       &kp E        &kp R        &kp T          &kp Z            &kp U        &kp I        &kp O       &kp MINUS
                &mt LGUI A  &mt LALT S  &mt LCTRL D  &mt LSHFT F  &kp G          &kp H            &mt RSHFT J  &mt RCTRL K  &mt RALT L  &mt RGUI P
&mt ESCAPE DEL  &kp Y       &kp X       &kp C        &kp V        &kp B          &kp N            &kp M        &kp COMMA    &kp DOT     &kp LEFT_ALT  &kp ENTER
                                        &kp TAB      &kp LSHFT    &lt 5 SPACE    &lt 3 BACKSPACE  &lt 2 ENTER  &lt 4 LCTRL
            >;
        };

        Colemak {
            bindings = <
        &kp Q       &kp W       &kp F        &kp P        &kp B     &kp J   &kp L        &kp U        &kp Y       &kp BSPC
        &mt LGUI A  &mt LALT R  &mt LCTRL S  &mt LSHFT T  &kp G     &kp M   &mt RSHFT N  &mt RCTRL E  &mt RALT I  &mt RGUI O
&trans  &kp Z       &kp X       &kp C        &kp D        &kp V     &kp K   &kp H        &trans       &trans      &trans      &trans
                                &trans       &trans       &trans    &trans  &trans       &trans
            >;
        };

        Num {
            bindings = <
        &kp SLASH      &kp N7  &kp N8   &kp N9  &kp MINUS       &kp RS(RA(RC(NUMBER_3)))  &trans          &trans     &trans        &trans
        &kp LS(STAR)   &kp N4  &kp N5   &kp N6  &kp PLUS        &trans                    &kp LEFT_SHIFT  &kp LCTRL  &kp LEFT_ALT  &kp LEFT_GUI
&trans  &kp LS(PRCNT)  &kp N1  &kp N2   &kp N3  &kp LS(SEMI)    &trans                    &trans          &trans     &trans        &trans        &trans
                               &kp DOT  &kp N0  &kp RET         &trans                    &trans          &trans
            >;
        };

        Sym {
            bindings = <
        &kp LBKT   &kp LS(FSLH)  &kp LS(LPAR)   &kp LS(RPAR)   &kp RBKT    &kp RS(RA(RC(NUMBER_4)))  &trans          &trans     &trans        &trans
        &kp LBRC   &kp LS(DLLR)  &kp LS(PRCNT)  &kp LS(AMPS)   &kp RBRC    &trans                    &kp LEFT_SHIFT  &kp LCTRL  &kp LEFT_ALT  &kp LEFT_GUI
&trans  &kp CARET  &kp LS(EXCL)  &kp LS(DQT)    &kp LS(DLLR)   &kp BSLH    &trans                    &trans          &trans     &trans        &trans        &trans
                                 &kp LS(COLON)  &kp LS(EQUAL)  &trans      &trans                    &trans          &trans
            >;
        };

        Sym2 {
            bindings = <
       &kp LS(FSLH)  &kp LS(LPAR)  &kp LS(STAR)  &kp LS(RPAR)  &kp BSLH       &kp RS(RA(RC(N5)))  &none      &none      &none     &none
       &kp CARET     &kp LBKT      &kp TILDE     &kp RBKT      &kp LS(SQT)    &none               &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI
&none  &kp LT        &kp LBRC      &kp POUND     &kp RBRC      &kp LS(GT)     &trans              &none      &none      &none     &none     &none
                                   &none         &none         &none          &none               &none      &none
            >;
        };

        NAV {
            bindings = <
        &trans    &trans    &trans     &trans     &kp RS(RA(RC(NUMBER_6)))    &kp LC(Z)  &kp LC(C)       &kp LC(V)       &kp LC(X)     &kp LC(Y)
        &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans                      &trans     &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT
&trans  &trans    &trans    &trans     &trans     &trans                      &trans     &kp HOME        &kp PG_DN       &kp PG_UP     &kp END          &trans
                            &trans     &trans     &trans                      &kp BSPC   &kp ENTER       &kp LCTRL
            >;
        };

        Mouse {
            bindings = <
       &trans    &trans    &trans     &trans     &kp RS(RA(RC(NUMBER_7)))    &kp LC(Z)  &kp LC(C)       &kp LC(V)       &kp LC(X)     &kp LC(Y)
       &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans                      &trans     &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT
&to 0  &trans    &trans    &trans     &trans     &trans                      &trans     &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &trans
                           &trans     &trans     &trans                      &mkp MB1   &mkp MB2        &mkp MB3
            >;
        };

        Sys {
            bindings = <
       &sys_reset   &bt BT_CLR  &out OUT_TOG  &trans  &trans    &kp RS(RA(RC(NUMBER_8)))  &kp F1  &kp F2   &kp F3   &kp F4
       &bootloader  &bt BT_NXT  &trans        &trans  &trans    &trans                    &kp F5  &kp F6   &kp F7   &kp F8
&to 0  &trans       &bt BT_PRV  &trans        &trans  &trans    &trans                    &kp F9  &kp F10  &kp F11  &kp F12  &trans
                                &trans        &trans  &trans    &trans                    &trans  &trans
            >;
        };

        layer_8 {
            bindings = <
        &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
