// This file was generated from a template. Edit it to match your keyboard.
// See https://zmk.dev/docs/development/hardware-integration/new-shield for more instructions.

#include <locale/keys_de.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    // Define a default keymap here.
    // See https://zmk.dev/docs/development/hardware-integration/new-shield#default-keymap.

    keymap {
        compatible = "zmk,keymap";

        QWERTZ {
            bindings = <
       &kp Q       &kp W       &kp E        &kp R        &kp T          &kp Z     &kp U        &kp I        &kp O       &kp BSPC
       &mt LGUI A  &mt LALT S  &mt LCTRL D  &mt LSHFT F  &kp G          &kp H     &mt RSHFT J  &mt RCTRL K  &mt RALT L  &mt RGUI P
&kp Z  &kp Y       &kp X       &kp C        &kp V        &kp B          &kp N     &kp M        &kp BSPC     &kp BSPC    &kp BSPC    &kp BSPC
                               &kp BSPC     &kp BSPC     &kp BSPC       &kp BSPC  &kp BSPC     &kp BSPC
            >;
        };

        Colemak {
            bindings = <
          &kp Q       &kp W       &kp F        &kp P        &kp B           &kp J     &kp L        &kp U        &kp Y       &kp BSPC
          &mt LGUI A  &mt LALT R  &mt LCTRL S  &mt LSHFT T  &kp G           &kp M     &mt RSHFT N  &mt RCTRL E  &mt RALT I  &mt RGUI O
&kp BSPC  &kp Z       &kp X       &kp C        &kp D        &kp V           &kp K     &kp H        &kp BSPC     &kp BSPC    &kp BSPC    &kp BSPC
                                  &kp BSPC     &kp BSPC     &kp BSPC        &kp BSPC  &kp BSPC     &kp BSPC
            >;
        };

        Num {
            bindings = <
     &kp SLASH  &kp  &kp  &kp  &kp          &kp  &kp             &kp        &kp           &kp
     &kp        &kp  &kp  &kp  &kp          &kp  &kp LEFT_SHIFT  &kp LCTRL  &kp LEFT_ALT  &kp LEFT_GUI
&kp  &kp        &kp  &kp  &kp  &kp          &kp  &kp             &kp        &kp           &kp           &kp
                     &kp  &kp  &kp          &kp  &kp             &kp
            >;
        };

        Sym {
            bindings = <
     &kp SLASH  &kp  &kp  &kp  &kp          &kp  &kp             &kp        &kp           &kp
     &kp        &kp  &kp  &kp  &kp          &kp  &kp LEFT_SHIFT  &kp LCTRL  &kp LEFT_ALT  &kp LEFT_GUI
&kp  &kp        &kp  &kp  &kp  &kp          &kp  &kp             &kp        &kp           &kp           &kp
                     &kp  &kp  &kp          &kp  &kp             &kp
            >;
        };

        Nav {
            bindings = <
     &kp SLASH  &kp  &kp  &kp  &kp          &kp  &kp             &kp        &kp           &kp
     &kp        &kp  &kp  &kp  &kp          &kp  &kp LEFT_SHIFT  &kp LCTRL  &kp LEFT_ALT  &kp LEFT_GUI
&kp  &kp        &kp  &kp  &kp  &kp          &kp  &kp             &kp        &kp           &kp           &kp
                     &kp  &kp  &kp          &kp  &kp             &kp
            >;
        };

        Mouse {
            bindings = <
     &kp  &kp  &kp  &kp  &kp            &kp  &kp             &kp             &kp           &kp
     &kp  &kp  &kp  &kp  &kp            &kp  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT
&kp  &kp  &kp  &kp  &kp  &kp            &kp  &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &kp
               &kp  &kp  &kp            &kp  &kp             &kp
            >;
        };

        Sym2 {
            bindings = <
     &kp  &kp  &kp  &kp  &kp            &kp  &kp  &kp  &kp  &kp
     &kp  &kp  &kp  &kp  &kp            &kp  &kp  &kp  &kp  &kp
&kp  &kp  &kp  &kp  &kp  &kp            &kp  &kp  &kp  &kp  &kp  &kp
               &kp  &kp  &kp            &kp  &kp  &kp
            >;
        };
    };
};